"use strict";(self.webpackChunkbelajar_react=self.webpackChunkbelajar_react||[]).push([[697],{7599:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>t,metadata:()=>r,toc:()=>d});var i=n(5893),s=n(1151);const t={},l=void 0,r={id:"Referensi/Kamus",title:"Kamus",description:"_",source:"@site/docs/Referensi/Kamus.md",sourceDirName:"Referensi",slug:"/Referensi/Kamus",permalink:"/belajar-js/Referensi/Kamus",draft:!1,unlisted:!1,editUrl:"https://github.com/isnakode/belajar-js/tree/main/docs/Referensi/Kamus.md",tags:[],version:"current",lastUpdatedBy:"isnakode",lastUpdatedAt:1699672598,formattedLastUpdatedAt:"Nov 11, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"return",permalink:"/belajar-js/Function/return"}},c={},d=[{value:"Assignment",id:"assignment",level:3},{value:"Backtick",id:"backtick",level:3},{value:"Camel case",id:"camel-case",level:3},{value:"Concatenation",id:"concatenation",level:3},{value:"Initialization",id:"initialization",level:3},{value:"Infinite loop",id:"infinite-loop",level:3},{value:"Modulo",id:"modulo",level:3},{value:"Snake case",id:"snake-case",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Upper camel case",id:"upper-camel-case",level:3}];function u(a){const e={a:"a",code:"code",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,s.a)(),...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"assignment",children:"Assignment"}),"\n",(0,i.jsx)(e.p,{children:"Proses memasukkan data ke dalam variable"}),"\n",(0,i.jsx)(e.h3,{id:"backtick",children:"Backtick"}),"\n",(0,i.jsx)(e.p,{children:"Backtick mirip dengan tanda kutip, namun backtick berada di samping kiri angka 1 pada keyboard"}),"\n",(0,i.jsx)(e.h3,{id:"camel-case",children:"Camel case"}),"\n",(0,i.jsx)(e.p,{children:"Cara penulisan dengan menggunakan huruf kecil di awal, lalu diikuti dengan huruf kapital untuk huruf pertama kata-kata selanjutnya"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"let nama\r\nlet namaKamu\r\nlet namaKucingKakak\n"})}),"\n",(0,i.jsx)(e.h3,{id:"concatenation",children:"Concatenation"}),"\n",(0,i.jsx)(e.p,{children:"Concatenation adalah penggabungan 2 atau lebih string menjadi satu"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"'namaku ' + 'adalah ' + 'isnaini' \n"})}),"\n",(0,i.jsx)(e.h3,{id:"initialization",children:"Initialization"}),"\n",(0,i.jsx)(e.p,{children:"Atau disebut juga inisialisasi yang berarti Pengisian pertama"}),"\n",(0,i.jsx)(e.h3,{id:"infinite-loop",children:"Infinite loop"}),"\n",(0,i.jsx)(e.p,{children:"Keadaan saat sebuah perulangan tidak pernah berhenti, biasnya terjadi saat kondisi loop selalu true, contoh (jangan dicoba, kemungkinan besar laptopmu akan hang):"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"while(true){\r\n    console.log('infinity')\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"modulo",children:"Modulo"}),"\n",(0,i.jsx)(e.p,{children:"Modulo atau mod adalah hasil bagi (video youtube akan dibuat \ud83d\udc7b)"}),"\n",(0,i.jsx)(e.h3,{id:"snake-case",children:"Snake case"}),"\n",(0,i.jsx)(e.p,{children:"Cara penulisan dengan menggunakan huruf kecil di awal, dan jika ada kata selanjutnya harus disambung dengan underscore"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"let nama\r\nlet nama_kamu\r\nlet nama_kucing_kakak\n"})}),"\n",(0,i.jsx)(e.h3,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(e.p,{children:"Aturan penulisan pada suatu bahasa pemrograman"}),"\n",(0,i.jsx)(e.h3,{id:"upper-camel-case",children:"Upper camel case"}),"\n",(0,i.jsxs)(e.p,{children:["Sama dengan ",(0,i.jsx)(e.a,{href:"#camel-case",children:"camel case"}),", namun dimulai dengan huruf besar di awal"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"let Nama\r\nlet NamaKamu\r\nlet NamaKucingKakak\n"})})]})}function o(a={}){const{wrapper:e}={...(0,s.a)(),...a.components};return e?(0,i.jsx)(e,{...a,children:(0,i.jsx)(u,{...a})}):u(a)}},1151:(a,e,n)=>{n.d(e,{Z:()=>r,a:()=>l});var i=n(7294);const s={},t=i.createContext(s);function l(a){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function r(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(s):a.components||s:l(a.components),i.createElement(t.Provider,{value:e},a.children)}}}]);