"use strict";(self.webpackChunkbelajar_react=self.webpackChunkbelajar_react||[]).push([[822],{8665:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>k,contentTitle:()=>s,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=e(5893),i=e(1151);const t={sidebar_position:1},s=void 0,o={id:"Function/Parameter",title:"Parameter",description:"Masalah function",source:"@site/docs/Function/Parameter.mdx",sourceDirName:"Function",slug:"/Function/Parameter",permalink:"/belajar-js/Function/Parameter",draft:!1,unlisted:!1,editUrl:"https://github.com/isnakode/belajar-js/tree/main/docs/Function/Parameter.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Function",permalink:"/belajar-js/Function/"},next:{title:"return",permalink:"/belajar-js/Function/return"}},k={},c=[{value:"Masalah function",id:"masalah-function",level:2},{value:"Paramater",id:"paramater",level:2}];function l(a){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"masalah-function",children:"Masalah function"}),"\n",(0,r.jsxs)(n.p,{children:["Mulai sekarang, kita anggap saja function itu sebuah ",(0,r.jsx)(n.code,{children:"perintah"}),"!, kita coba buat sebuah function makan, lalu kita akan memanggilnya dua kali"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"function makan() {\r\n    console.log('kakak');\r\n    console.log('makan ayam');\r\n}\r\n\r\nmakan()\r\nmakan()\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Jika kalian run, maka akan muncul pesan ",(0,r.jsx)(n.code,{children:"kakak makan ayam"})," 2x, tidak ada yang salah, tapi bagaimana jika kita ingin suruh adek?"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"function makan() {\r\n    console.log('adek');\r\n    console.log('makan ayam');\r\n}\r\n\r\nmakan()\r\nmakan()\n"})}),"\n",(0,r.jsx)(n.p,{children:"ok, kita berhasil suruh adek, tapi kakak mana?, ingat!, function dibuat untuk melakukan hal yang sama, jadi solusi sementara kita bisa saja membuat function lain"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"function makanKak() {\r\n    console.log('kakak');\r\n    console.log('makan ayam');\r\n}\r\n\r\nfunction makanDek() {\r\n    console.log('adek');\r\n    console.log('makan ayam');\r\n}\r\n\r\nmakanKak()\r\nmakanDek()\n"})}),"\n",(0,r.jsx)(n.p,{children:"yeay, berhasil, kakak dan adek bisa makan ayam, tapi bagaimana jika ingin suruh keponakan, ibu, ayah, kakek, huuuuuuu banyak banget, gk kebayang bikin puluhan function hanya untuk makan ayam"}),"\n",(0,r.jsx)(n.h2,{id:"paramater",children:"Paramater"}),"\n",(0,r.jsxs)(n.p,{children:["Dikarnakan membuat banyak function yang melakukan hal yang sama sangat menguras waktu, javascript memberikan solusi bernama ",(0,r.jsx)(n.code,{children:"parameter"}),", apa itu parameter?, parameter bisa kita sebut sebagai ",(0,r.jsx)(n.code,{children:"info tambahan"}),", perhatikan kode tadi"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"function makanKak() {\r\n    console.log('kakak');\r\n    console.log('makan ayam');\r\n}\r\n\r\nfunction makanDek() {\r\n    console.log('adek');\r\n    console.log('makan ayam');\r\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Kalian akan melihat, dua function tersebut hanya beda orang(kakak dan adek), sedangkan makan ayam sama, jadi kita bisa mengangkat hal yang beda tadi(orang) sebagai parameter, caranya cukup menambahkannya di dalam tanda kurung"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"function makan(orang) {\r\n    console.log(orang); // orang diambil dari parameter\r\n    console.log('makan ayam');\r\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Dengan kode diatas, orang bisa diganti ganti tergantung apa yang kita isikan, cara memanggil functionnya sekarang seperti berikut:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"makan('kakak')\r\nmakan('adek')\r\nmakan('ibu')\n"})}),"\n",(0,r.jsx)(n.p,{children:"Lihat?, dengan satu function kita bisa menggunakannya untuk beberapa orang, kita juga bisa menambahkan beberapa parameter dengan dipisahkan koma"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"function makan(orang, porsi) {\r\n    // kode kalian\r\n}\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"catatan",type:"note",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"makan('kakak')\r\nmakan('adek')\r\nmakan('ibu')\n"})}),(0,r.jsxs)(n.p,{children:["'kakak', 'adek', dan 'ibu' yang dimasukkan saat pemanggilan function disebut ",(0,r.jsx)(n.a,{href:"/referensi/kamus#argumen",children:"argumen"})]})]})]})}function u(a={}){const{wrapper:n}={...(0,i.a)(),...a.components};return n?(0,r.jsx)(n,{...a,children:(0,r.jsx)(l,{...a})}):l(a)}},1151:(a,n,e)=>{e.d(n,{Z:()=>o,a:()=>s});var r=e(7294);const i={},t=r.createContext(i);function s(a){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof a?a(n):{...n,...a}}),[n,a])}function o(a){let n;return n=a.disableParentContext?"function"==typeof a.components?a.components(i):a.components||i:s(a.components),r.createElement(t.Provider,{value:n},a.children)}}}]);